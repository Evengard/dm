<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DM.Web.API</name>
    </assembly>
    <members>
        <member name="T:DM.Web.API.Authentication.ApiCredentialsStorage">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Authentication.ApiCredentialsStorage.ExtractToken(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Authentication.ApiCredentialsStorage.Load(Microsoft.AspNetCore.Http.HttpContext,DM.Services.Authentication.Dto.IIdentity)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Authentication.ApiCredentialsStorage.Unload(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:DM.Web.API.Authentication.AuthenticationSwaggerFilter">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Authentication.AuthenticationSwaggerFilter.Apply(Swashbuckle.AspNetCore.Swagger.Operation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <inheritdoc />
        </member>
        <member name="T:DM.Web.API.Controllers.v1.Common.CommentController">
            <summary>
            Commentaries
            </summary>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Common.CommentController.PutComment(System.Guid,DM.Web.API.Dto.Common.Comment)">
            <summary>
            Update comment
            </summary>
            <param name="id"></param>
            <param name="comment"></param>
            <response code="200"></response>
            <response code="400">Some changed comment properties were invalid or passed id was not recognized</response>
            <response code="401">User must be authenticated</response>
            <response code="403">User is not allowed to change this comment</response>
            <response code="404">Comment was not found with passed id</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Common.CommentController.DeleteComment(System.Guid)">
            <summary>
            Delete comment
            </summary>
            <param name="id"></param>
            <response code="204"></response>
            <response code="401">User must be authenticated</response>
            <response code="403">User is not allowed to change this comment</response>
            <response code="404">Comment was not found with passed id</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Common.CommentController.PostLike(System.Guid)">
            <summary>
            Post new like
            </summary>
            <param name="id"></param>
            <response code="201"></response>
            <response code="401">User must be authenticated</response>
            <response code="403">User is not allowed to like the comment</response>
            <response code="404">No available comment was found with passed id</response>
            <response code="409">User already liked this comment</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Common.CommentController.DeleteLike(System.Guid)">
            <summary>
            Delete like
            </summary>
            <param name="id"></param>
            <response code="204"></response>
            <response code="401">User must be authenticated</response>
            <response code="403">User is not allowed to remove like from this comment</response>
            <response code="404">No available comment was found with passed id</response>
            <response code="409">User has no like for this comment</response>
        </member>
        <member name="T:DM.Web.API.Controllers.v1.Fora.ForumController">
            <summary>
            Fora
            </summary>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.ForumController.#ctor(DM.Web.API.Services.Fora.IForumApiService,DM.Web.API.Services.Fora.ITopicApiService,DM.Web.API.Services.Fora.IModeratorsApiService)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.ForumController.GetFora">
            <summary>
            Get list of available fora
            </summary>
            <response code="200"></response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.ForumController.GetForum(System.String)">
            <summary>
            Get certain forum
            </summary>
            <param name="id"></param>
            <response code="200"></response>
            <response code="404">No available forum with this id</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.ForumController.GetModerators(System.String)">
            <summary>
            Get forum moderators
            </summary>
            <param name="id"></param>
            <response code="200"></response>
            <response code="404">No available forum with this id</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.ForumController.GetTopics(System.String,DM.Web.API.Dto.Fora.TopicFilters,System.Int32)">
            <summary>
            Get list of forum topics
            </summary>
            <param name="id"></param>
            <param name="f">Filters</param>
            <param name="n">Entity number</param>
            <response code="200"></response>
            <response code="400">Some properties of the passed search parameters were invalid</response>
            <response code="404">No available forum with this id</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.ForumController.PostTopic(System.String,DM.Web.API.Dto.Fora.Topic)">
            <summary>
            Post new topic
            </summary>
            <param name="id"></param>
            <param name="topic"></param>
            <response code="201"></response>
            <response code="400">Some of the passed topic properties were invalid</response>
            <response code="403">User is not allowed to create topics in this forum</response>
            <response code="404">No available forum with this id</response>
        </member>
        <member name="T:DM.Web.API.Controllers.v1.Fora.TopicController">
            <summary>
            Topics
            </summary>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.TopicController.#ctor(DM.Web.API.Services.Fora.ITopicApiService)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.TopicController.GetTopic(System.Guid)">
            <summary>
            Get certain topic
            </summary>
            <param name="id"></param>
            <response code="200"></response>
            <response code="404">No topic was found for passed id</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.TopicController.PutTopic(System.Guid,DM.Web.API.Dto.Fora.Topic)">
            <summary>
            Put topic changes
            </summary>
            <param name="id"></param>
            <param name="topic">Topic</param>
            <response code="200"></response>
            <response code="400">Some of topic changed properties were invalid or passed id was not recognized</response>
            <response code="401">User must be authenticated</response>
            <response code="403">User is not authorized to change some properties of this topic</response>
            <response code="404">No topic was found for passed id</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.TopicController.DeleteTopic(System.Guid)">
            <summary>
            Delete certain topic
            </summary>
            <param name="id"></param>
            <response code="200"></response>
            <response code="401">User must be authenticated</response>
            <response code="403">User is not allowed to remove the topic</response>
            <response code="404">No topic was found for passed id</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.TopicController.PostLike(System.Guid)">
            <summary>
            Post new like
            </summary>
            <param name="id"></param>
            <response code="201"></response>
            <response code="401">User must be authenticated</response>
            <response code="403">User is not allowed to like the topic</response>
            <response code="404">No topic was found for passed id</response>
            <response code="409">User already liked this topic</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.TopicController.DeleteLike(System.Guid)">
            <summary>
            Delete like
            </summary>
            <param name="id"></param>
            <response code="204"></response>
            <response code="401">User must be authenticated</response>
            <response code="403">User is not allowed to remove like from this topic</response>
            <response code="404">No topic was found for passed id</response>
            <response code="409">User has no like for this topic</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.TopicController.GetComments(System.Guid,System.Int32)">
            <summary>
            Get list of comments
            </summary>
            <param name="id"></param>
            <param name="n">Entity number</param>
            <response code="200"></response>
            <response code="404">No topic was found for passed id</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Fora.TopicController.PostComment(System.Guid,DM.Web.API.Dto.Common.Comment)">
            <summary>
            Post new comment
            </summary>
            <param name="id"></param>
            <param name="comment">Comment</param>
            <response code="201"></response>
            <response code="400">Some of comment properties were invalid</response>
            <response code="401">User must be authenticated</response>
            <response code="403">User is not allowed to comment this topic</response>
            <response code="404">No topic was found for passed id</response>
        </member>
        <member name="T:DM.Web.API.Controllers.v1.Users.AccountController">
            <summary>
            Account
            </summary>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Users.AccountController.#ctor(DM.Web.API.Services.Users.IAccountApiService)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Users.AccountController.Login(DM.Web.Core.Authentication.Credentials.LoginCredentials)">
            <summary>
            Authenticate via credentials
            </summary>
            <param name="credentials">Login credentials</param>
            <response code="200"></response>
            <response code="400">User not found or password is incorrect</response>
            <response code="403">User is inactive or banned</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Users.AccountController.Logout">
            <summary>
            Logout as current user
            </summary>
            <response code="204"></response>
            <response code="401">User must be authenticated</response>
        </member>
        <member name="M:DM.Web.API.Controllers.v1.Users.AccountController.LogoutAll">
            <summary>
            Logout from every device
            </summary>
            <response code="204"></response>
            <response code="401">User must be authenticated</response>
        </member>
        <member name="T:DM.Web.API.Dto.Common.Comment">
            <summary>
            API DTO model for commentary
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Common.Comment.Id">
            <summary>
            Commentary identifier
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Common.Comment.Author">
            <summary>
            Author
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Common.Comment.Created">
            <summary>
            Creation moment
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Common.Comment.Updated">
            <summary>
            Last update moment
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Common.Comment.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Common.Comment.Likes">
            <summary>
            Users who liked it
            </summary>
        </member>
        <member name="T:DM.Web.API.Dto.Common.CommentProfile">
            <summary>
            Mapping profile from Service DTO to API DTO for commentaries
            </summary>
        </member>
        <member name="M:DM.Web.API.Dto.Common.CommentProfile.#ctor">
            <inheritdoc />
        </member>
        <member name="T:DM.Web.API.Dto.Contracts.BadRequestError">
            <summary>
            Bad request error DTO
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Contracts.BadRequestError.InvalidProperties">
            <summary>
            Key-value pairs of invalid request properties
            </summary>
        </member>
        <member name="M:DM.Web.API.Dto.Contracts.BadRequestError.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="T:DM.Web.API.Dto.Contracts.Envelope`1">
            <summary>
            Enveloped DTO model
            </summary>
            <typeparam name="T">Enveloped type</typeparam>
        </member>
        <member name="M:DM.Web.API.Dto.Contracts.Envelope`1.#ctor(`0)">
            <inheritdoc />
        </member>
        <member name="P:DM.Web.API.Dto.Contracts.Envelope`1.Resource">
            <summary>
            Enveloped resource
            </summary>
        </member>
        <member name="T:DM.Web.API.Dto.Contracts.ListEnvelope`1">
            <summary>
            Enveloped list DTO model
            </summary>
            <typeparam name="T">Enveloped type</typeparam>
        </member>
        <member name="M:DM.Web.API.Dto.Contracts.ListEnvelope`1.#ctor(System.Collections.Generic.IEnumerable{`0},DM.Web.API.Dto.Contracts.Paging)">
            <inheritdoc />
        </member>
        <member name="P:DM.Web.API.Dto.Contracts.ListEnvelope`1.Resources">
            <summary>
            Enveloped resources
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Contracts.ListEnvelope`1.Paging">
            <summary>
            Paging data
            </summary>
        </member>
        <member name="T:DM.Web.API.Dto.Contracts.GeneralError">
            <summary>
            General error DTO model
            </summary>
        </member>
        <member name="M:DM.Web.API.Dto.Contracts.GeneralError.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="P:DM.Web.API.Dto.Contracts.GeneralError.Message">
            <summary>
            Client message
            </summary>
        </member>
        <member name="T:DM.Web.API.Dto.Contracts.Paging">
            <summary>
            Paging DTO model
            </summary>
        </member>
        <member name="M:DM.Web.API.Dto.Contracts.Paging.#ctor(DM.Services.Core.Dto.PagingData)">
            <inheritdoc />
        </member>
        <member name="P:DM.Web.API.Dto.Contracts.Paging.Pages">
            <summary>
            Total pages count
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Contracts.Paging.Current">
            <summary>
            Current page number
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Contracts.Paging.Size">
            <summary>
            Page size
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Contracts.Paging.Number">
            <summary>
            Entity number
            </summary>
        </member>
        <member name="T:DM.Web.API.Dto.Fora.Forum">
            <summary>
            API DTO model for forum
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Forum.Id">
            <summary>
            Forum identifier
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Forum.UnreadTopicsCount">
            <summary>
            Total count of topics with unread commentaries within
            </summary>
        </member>
        <member name="T:DM.Web.API.Dto.Fora.ForumProfile">
            <summary>
            Mapping profile from Service DTO to API DTO for fora
            </summary>
        </member>
        <member name="M:DM.Web.API.Dto.Fora.ForumProfile.#ctor">
            <inheritdoc />
        </member>
        <member name="T:DM.Web.API.Dto.Fora.Topic">
            <summary>
            API DTO model for topic
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.Id">
            <summary>
            Topic identifier
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.Author">
            <summary>
            Author
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.Created">
            <summary>
            Creation moment
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.Attached">
            <summary>
            Attached
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.Closed">
            <summary>
            Closed
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.LastComment">
            <summary>
            Last commentary
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.CommentsCount">
            <summary>
            Total commentaries count
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.UnreadCommentsCount">
            <summary>
            Number of unread commentaries
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.Forum">
            <summary>
            Forum
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.Topic.Likes">
            <summary>
            Users who like this
            </summary>
        </member>
        <member name="T:DM.Web.API.Dto.Fora.LastTopicComment">
            <summary>
            Last topic commentary DTO
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.LastTopicComment.Created">
            <summary>
            Creation moment
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.LastTopicComment.Author">
            <summary>
            Author
            </summary>
        </member>
        <member name="T:DM.Web.API.Dto.Fora.TopicFilters">
            <summary>
            Input DTO for topics filtering
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Fora.TopicFilters.Attached">
            <summary>
            Filter attached/non attached
            </summary>
        </member>
        <member name="T:DM.Web.API.Dto.Fora.TopicProfile">
            <summary>
            Mapping profile from Service DTO to API DTO for topics
            </summary>
        </member>
        <member name="M:DM.Web.API.Dto.Fora.TopicProfile.#ctor">
            <inheritdoc />
        </member>
        <member name="T:DM.Web.API.Dto.Users.User">
            <summary>
            DTO model for user
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Users.User.Login">
            <summary>
            Login
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Users.User.Roles">
            <summary>
            Roles
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Users.User.ProfilePictureUrl">
            <summary>
            Profile picture URL
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Users.User.Rating">
            <summary>
            Rating
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Users.User.Online">
            <summary>
            Last seen online moment
            </summary>
        </member>
        <member name="T:DM.Web.API.Dto.Users.Rating">
            <summary>
            DTO model for user rating
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Users.Rating.Enabled">
            <summary>
            Rating participation flag
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Users.Rating.Quality">
            <summary>
            Quality rating
            </summary>
        </member>
        <member name="P:DM.Web.API.Dto.Users.Rating.Quantity">
            <summary>
            Quantity rating
            </summary>
        </member>
        <member name="T:DM.Web.API.Dto.Users.UserProfile">
            <summary>
            Mapping profile from Service DTO to API DTO for users
            </summary>
        </member>
        <member name="M:DM.Web.API.Dto.Users.UserProfile.#ctor">
            <inheritdoc />
        </member>
        <member name="T:DM.Web.API.Middleware.ErrorHandlingMiddleware">
            <summary>
            Middleware for exceptions handling
            </summary>
        </member>
        <member name="M:DM.Web.API.Middleware.ErrorHandlingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Middleware.ErrorHandlingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Before request
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:DM.Web.API.Program">
            <summary>
            Hosting
            </summary>
        </member>
        <member name="M:DM.Web.API.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:DM.Web.API.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Create web host builder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:DM.Web.API.Services.Fora.ForumApiService">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Fora.ForumApiService.#ctor(DM.Services.Forum.Implementation.IForumService,AutoMapper.IMapper)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Fora.ForumApiService.Get">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Fora.ForumApiService.Get(System.String)">
            <inheritdoc />
        </member>
        <member name="T:DM.Web.API.Services.Fora.IForumApiService">
            <summary>
            API service for forum resources
            </summary>
        </member>
        <member name="M:DM.Web.API.Services.Fora.IForumApiService.Get">
            <summary>
            Get list of available fora
            </summary>
            <returns>Envelope with fora list</returns>
        </member>
        <member name="M:DM.Web.API.Services.Fora.IForumApiService.Get(System.String)">
            <summary>
            Get forum by id
            </summary>
            <param name="id">Forum id</param>
            <returns>Envelope with forum</returns>
        </member>
        <member name="T:DM.Web.API.Services.Fora.IModeratorsApiService">
            <summary>
            API service for forum moderators
            </summary>
        </member>
        <member name="M:DM.Web.API.Services.Fora.IModeratorsApiService.GetModerators(System.String)">
            <summary>
            Get list of forum moderators
            </summary>
            <param name="id">Forum id</param>
            <returns>Envelope of moderators list</returns>
        </member>
        <member name="T:DM.Web.API.Services.Fora.ITopicApiService">
            <summary>
            API service for forum topics
            </summary>
        </member>
        <member name="M:DM.Web.API.Services.Fora.ITopicApiService.Get(System.String,DM.Web.API.Dto.Fora.TopicFilters,System.Int32)">
            <summary>
            Get forum topics
            </summary>
            <param name="forumId">Forum id</param>
            <param name="filters">Search filters</param>
            <param name="entityNumber">Entity number</param>
            <returns>Envelope of topics list</returns>
        </member>
        <member name="M:DM.Web.API.Services.Fora.ITopicApiService.Get(System.Guid)">
            <summary>
            Get topic
            </summary>
            <param name="topicId">Topic id</param>
            <returns>Envelope of topic</returns>
        </member>
        <member name="M:DM.Web.API.Services.Fora.ITopicApiService.Create(System.String,DM.Web.API.Dto.Fora.Topic)">
            <summary>
            Create new topic
            </summary>
            <param name="forumId">Forum id</param>
            <param name="topic">Topic model</param>
            <returns>Envelope of topic</returns>
        </member>
        <member name="M:DM.Web.API.Services.Fora.ITopicApiService.Get(System.Guid,System.Int32)">
            <summary>
            Get topics commentaries
            </summary>
            <param name="topicId">Topic id</param>
            <param name="entityNumber">Entity number</param>
            <returns>Envelope of commentaries list</returns>
        </member>
        <member name="T:DM.Web.API.Services.Fora.ModeratorsApiService">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Fora.ModeratorsApiService.#ctor(DM.Services.Forum.Implementation.IForumService,AutoMapper.IMapper)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Fora.ModeratorsApiService.GetModerators(System.String)">
            <inheritdoc />
        </member>
        <member name="T:DM.Web.API.Services.Fora.TopicApiService">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Fora.TopicApiService.#ctor(DM.Services.Forum.Implementation.IForumService,AutoMapper.IMapper)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Fora.TopicApiService.Get(System.String,DM.Web.API.Dto.Fora.TopicFilters,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Fora.TopicApiService.Get(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Fora.TopicApiService.Create(System.String,DM.Web.API.Dto.Fora.Topic)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Fora.TopicApiService.Get(System.Guid,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:DM.Web.API.Services.Users.AccountApiService">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Users.AccountApiService.#ctor(DM.Web.Core.Authentication.IWebAuthenticationService,DM.Services.Authentication.Implementation.UserIdentity.IIdentityProvider,AutoMapper.IMapper)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Users.AccountApiService.Login(DM.Web.Core.Authentication.Credentials.LoginCredentials,Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Users.AccountApiService.Logout(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="M:DM.Web.API.Services.Users.AccountApiService.LogoutAll(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:DM.Web.API.Services.Users.IAccountApiService">
            <summary>
            API service for user authentication
            </summary>
        </member>
        <member name="M:DM.Web.API.Services.Users.IAccountApiService.Login(DM.Web.Core.Authentication.Credentials.LoginCredentials,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Login using login-password tuple
            </summary>
            <param name="credentials">Login and password</param>
            <param name="httpContext">HTTP context</param>
            <returns>Authenticated user</returns>
        </member>
        <member name="M:DM.Web.API.Services.Users.IAccountApiService.Logout(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Logout as current user
            </summary>
            <param name="httpContext">HTTP context</param>
            <returns></returns>
        </member>
        <member name="M:DM.Web.API.Services.Users.IAccountApiService.LogoutAll(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Logout as current user from every device with active session
            And create one new session
            </summary>
            <param name="httpContext">HTTP context</param>
            <returns></returns>
        </member>
        <member name="T:DM.Web.API.Startup">
            <summary>
            Application
            </summary>
        </member>
        <member name="M:DM.Web.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure application services
            </summary>
            <param name="services">Service collection</param>
            <returns>Service provider</returns>
        </member>
        <member name="M:DM.Web.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure application
            </summary>
            <param name="appBuilder"></param>
        </member>
    </members>
</doc>
