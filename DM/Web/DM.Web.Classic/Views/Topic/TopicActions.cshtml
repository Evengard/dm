@using DM.Services.Core.Extensions
@using DM.Web.Classic.Extensions.HtmlHelperExtensions.Dropdown
@using DM.Web.Classic.Extensions.IconFontExtensions
@using Microsoft.AspNetCore.Routing
@model DM.Web.Classic.Views.Topic.TopicActionsViewModel
@if (Model.HasActions)
{
    <span id="ShowTopicActionsLink" class="forum-topic-actions-link">@IconFont.Render(IconType.Actions)</span>
    <div id="TopicActions" class="forum-topic-action-links">
        @if (Model.CanEdit)
        {
            @Html.ActionLink("Редактировать", "Edit", "EditTopic",
                new RouteValueDictionary {{"topicId", Model.TopicId.EncodeToReadable(Model.TopicTitle)}},
                new Dictionary<string, object> {{"class", "forum-topic-action"}})
        }
        @if (Model.CanRemove)
        {
            <div class="forum-topic-action js-topic-action" data-url="@Url.Action("RemoveTopic", "Topic", new RouteValueDictionary {{"topicId", Model.TopicId}})">Удалить тему</div>
        }
        @if (Model.CanClose)
        {
            <div class="forum-topic-action js-topic-action" data-url="@Url.Action("CloseTopic", "Topic", new RouteValueDictionary {{"topicId", Model.TopicId}})">Закрыть тему</div>
        }
        @if (Model.CanOpen)
        {
            <div class="forum-topic-action js-topic-action" data-url="@Url.Action("OpenTopic", "Topic", new RouteValueDictionary {{"topicId", Model.TopicId}})">Переоткрыть тему</div>
        }
        @if (Model.CanAttach)
        {
            <div class="forum-topic-action js-topic-action" data-url="@Url.Action("AttachTopic", "Topic", new RouteValueDictionary {{"topicId", Model.TopicId}})">Закрепить тему</div>
        }
        @if (Model.CanDetach)
        {
            <div class="forum-topic-action js-topic-action" data-url="@Url.Action("DetachTopic", "Topic", new RouteValueDictionary {{"topicId", Model.TopicId}})">Открепить тему</div>
        }
        @if (Model.CanMove)
        {
            <div class="forum-topic-action">
                Переместить
                @Html.Dropdown("MoveTopicDropdown", Model.Forums, null, wrapperHtmlAttributes: new Dictionary<string, object>{{"class", "forum-topic-action-dropdown"}})
            </div>
        }
    </div>
}