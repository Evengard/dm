@using DM.Web.Classic.Extensions.IconFontExtensions
@using DM.Web.Classic.Extensions.UserExtensions
@using DM.Web.Classic.ViewComponents.Shared.HumanDate
@using DM.Web.Core.Helpers
@using Microsoft.AspNetCore.Routing
@model DM.Web.Classic.Views.Topic.TopicViewModel
@{
    ViewBag.Title = $"{Model.Title} | {Model.ForumTitle} | Форум";
    Layout = "~/Views/Shared/Layout/_TwoColumnLayout.cshtml";
}
@section LeftColumn
{
    @await Html.PartialAsync("Layout/ForumLeftColumn", Model.ForumId)
}

@await Html.PartialAsync("TopicActions", Model.TopicActions)
<h2 class="content-pageTitle">
    @if (Model.Attached)
    {
        @IconFont.Render(IconType.Pinned)
    }
    @if (Model.Closed)
    {
        @IconFont.Render(IconType.Lock)
    }
    @Model.Title
</h2>

@if (!string.IsNullOrEmpty(Model.Text))
{
    @Html.Raw(Model.Text)
}
<div class="topic-data date">
    @Html.UserLink(Model.Author),
    @await Component.InvokeAsync(nameof(HumanizedDate), new {date = Model.CreateDate})
</div>
<a href="@Url.Action("Index", "Forum", new RouteValueDictionary {{"forumTitle", Model.ForumTitle}, {"entityNumber", 1}})" class="topic-backLink">
    @IconFont.Render(IconType.LeftArrow) Назад на форум "@Model.ForumTitle"
</a>

@await Html.PartialAsync("Commentaries/Commentaries", Model.Commentaries, new ViewDataDictionary(ViewData) {{"NoAccessMessage", "Вы не можете оставлять комментарии в этой теме"}})

@section FooterScript
{

    <script>
        var topicCommentaries = new DM.PagedListControl({
            totalPages: @Model.Commentaries.TotalPagesCount,
            currentPage: @Model.Commentaries.CurrentPage,
            pageSize: @Model.Commentaries.PageSize,
            entityNumber: @Model.Commentaries.EntityNumber,
            pageUrlTemplate: "@Url.Action("Index", "Commentaries", new RouteValueDictionary {{"entityId", Model.TopicId.EncodeToReadable(Model.Title)}, {"entityNumber", "__pn__" }})",
            visualPageUrlTemplate: "@Url.Action("Index", "Topic", new RouteValueDictionary {{"topicId", Model.TopicId.EncodeToReadable(Model.Title)}, { "entityNumber", "__pn__" }})",
            withWarnings: true
        });
        var topicActions = new DM.TopicActionsControl({
            topicId: "@Model.TopicId",
            moveUrl: "@Url.Action("MoveTopic", "Topic", new RouteValueDictionary{{"topicId", Model.TopicId}})"
        });
        DM.Ready();
    </script>
}
