@using DM.Web.Classic.Extensions.IconFontExtensions
@using DM.Web.Classic.Extensions.UserExtensions
@using DM.Web.Core.Extensions.EnumExtensions
@using DM.Web.Core.Helpers
@using Microsoft.AspNetCore.Routing
@model DM.Web.Classic.Views.GameInfo.Characters.CharacterViewModel
<div class="charG-34 charactersList-characterRow" id="CharacterRow_@(Model.CharacterId)">
    <div class="charG-row">
        <div class="charG-col-1 charG-span-6">
            <div class="charG-contentWrapper">@Html.UserLink(Model.User)</div>
        </div>
        <div class="charG-col-7 charG-span-4">
            <div class="charG-contentWrapper">@Html.RatingLink(Model.User)</div>
        </div>
        <div class="charG-col-11 charG-span-3">
            <div class="charG-contentWrapper">
                @Model.User.IsOnline.PresenceFormat()
            </div>
        </div>
        <div class="charG-col-14 charG-span-10">
            <div class="charG-contentWrapper">
                <a href="@Url.Action("Index", "CharactersList", new RouteValueDictionary {{"characterId", Model.CharacterId.EncodeToReadable(Model.Name)}})">
                    @IconFont.Render(IconType.UnorderedList)
                </a>
                @Html.ActionLink(Model.Name, "Index", "Character",
                        new RouteValueDictionary { {"characterId", Model.CharacterId} },
                        new Dictionary<string, object> { {"class", "js-character-details-link" }, {"data-character-id", Model.CharacterId} })
                <div class="date">
                    @Model.Race
                    @if (!string.IsNullOrEmpty(Model.Race) && !string.IsNullOrEmpty(Model.Class))
                    {
                        @:/
                    }
                    @Model.Class
                </div>
            </div>
        </div>
        <div class="charG-col-24 charG-span-2">
            <div class="charG-contentWrapper">@*@Model.TurnCount*@</div>
        </div>
        <div class="charG-col-26 charG-span-6">
            <div class="charG-contentWrapper">
                @*@if (Model.LastPost == null)
                {
                    @:&ndash;
                }
                else
                {
                    <a href="@Url.Action("Index", "Post", new RouteValueDictionary {{"roomId", Model.LastPost.RoomId}})">
                        @await Component.InvokeAsync(nameof(HumanizedDate), new {date = Model.LastPost.CreateDate})
                    </a>
                }*@
            </div>
        </div>
        <div class="charG-col-32 charG-span-3">
            <div class="charG-contentWrapper">
                <span class="characterStatus-@(Model.Status.ToString().ToLower())">@Model.Status.GetDescription()</span>
            </div>
        </div>
    </div>
</div>