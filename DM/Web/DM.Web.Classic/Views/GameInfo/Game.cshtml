@using DM.Services.Core.Extensions
@using DM.Web.Classic.Extensions.UserExtensions
@using DM.Web.Classic.ViewComponents.Shared.HumanDate
@using DM.Web.Classic.Views.GameActions
@using DM.Web.Core.Extensions.EnumExtensions
@using Microsoft.AspNetCore.Routing
@model DM.Web.Classic.Views.GameInfo.GameViewModel
@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/Layout/_TwoColumnLayout.cshtml";
}
@section LeftColumn
{
    @await Html.PartialAsync("Layout/LeftBar/GameLeftColumn", PageType.Information, new ViewDataDictionary(ViewData) {{"GameId", Model.GameId}})
}

<h1 class="content-pageTitle">@Model.Title</h1>
@if (Model.ReleaseDate.HasValue)
{
    <div class="date">Создана @await Component.InvokeAsync(nameof(HumanizedDate), new {date = Model.ReleaseDate.Value})</div>
}

<div class="module-info">
    <div class="module-info-item">
        <span class="module-info-field">Статус:</span>
        <span class="module-info-value">@Model.Status.GetDescription()</span>
    </div>
    <div class="module-info-item">
        <span class="module-info-field">Мастер:</span>
        <span class="module-info-value">
            @Html.UserLink(Model.Master)
            (@Html.RatingLink(Model.Master))
            [@Model.Master.IsOnline.PresenceFormat()]
        </span>
    </div>
    @if (Model.Assistant != null)
    {
        <div class="module-info-item">
            <span class="module-info-field">Ассистент:</span>
            <span class="module-info-value">
                @Html.UserLink(Model.Assistant)
                (@Html.RatingLink(Model.Assistant))
                [@Model.Assistant.IsOnline.PresenceFormat()]
            </span>
        </div>
    }
    <div class="module-info-item">
        <span class="module-info-field">Система:</span>
        <span class="module-info-value">@Model.SystemName</span>
    </div>
    <div class="module-info-item">
        <span class="module-info-field">Сеттинг:</span>
        <span class="module-info-value">@Model.SettingName</span>
    </div>
    @if (Model.Tags.Any())
    {
        <div class="module-info-item">
            <span class="module-info-field">Теги:</span>
            <span class="module-info-value">
                @Html.Raw(string.Join(", ", Model.Tags.Select(t => Html.ActionLink(t.Title, "Tags", "GamesList", new RouteValueDictionary
                {
                    ["tagId"] = t.Id.EncodeToReadable(t.Title),
                    ["entityNumber"] = null
                }))))
            </span>
        </div>
    }

    @if (Model.Readers.Any())
    {
        <div class="module-info-item">
            <span class="module-info-field">Читатели:</span>
            <span class="module-info-value">
                @Html.Raw(string.Join(", ", Model.Readers.Select(r => Html.UserLink(r))))
            </span>
        </div>
    }
</div>

<div class="module-characters">
    <h2 class="content-mediumTitle">
        Персонажи игроков
        @if (Model.Characters.Any())
        {
            if (Model.ActiveCharactersCount > 0 && Model.RegisteredCharactersCount > 0)
            {
                @:(в игре <strong>@Model.ActiveCharactersCount</strong>, заявок <strong>@Model.RegisteredCharactersCount</strong>)
            }
            else if (Model.ActiveCharactersCount > 0)
            {
                @:(в игре <strong>@Model.ActiveCharactersCount</strong>)
            }
            else
            {
                @:(заявок <strong>@Model.RegisteredCharactersCount</strong>)
            }
        }
    </h2>
    @if (Model.Characters.Any())
    {
        <div id="CharactersList">
            @await Html.PartialAsync("~/Views/GameInfo/Characters/CharactersList.cshtml", Model.Characters)
        </div>
    }
    else
    {
        @:Пока что не подано ни одной заявки.
    }

    @if (Model.Npcs.Any())
    {
        <h2 class="content-mediumTitle toggle-list-link" id="ToggleNpcsLink">Персонажи мастера</h2>
        <div id="NpcsList">
            @await Html.PartialAsync("~/Views/GameInfo/Characters/CharactersList.cshtml", Model.Npcs)
        </div>
    }
</div>

<div class="module-description">
    @Html.Raw(Model.Info)
</div>

@section FooterScript
{
    <script>
        var moduleInfo = new DM.ModuleInfoControl();
        DM.Ready();
    </script>
}
