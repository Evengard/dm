@using DM.Web.Classic.Extensions.IconFontExtensions
@using DM.Web.Classic.Extensions.UserExtensions
@using DM.Web.Classic.ViewComponents.Shared.HumanDate
@using DM.Web.Core.Extensions.StringExtensions
@using DM.Web.Core.Helpers
@using Microsoft.AspNetCore.Routing
@model DM.Web.Classic.Views.Fora.Topic.TopicViewModel

<div class="topicG-34 topicList-item @(Model.Closed ? "topicList-item-closed" : string.Empty) @(Model.Attached ? "topicList-item-attached" : string.Empty)">
    <div class="topicG-row">
        <a href="@Url.Action("LastUnread", "Topic", new RouteValueDictionary {{"topicIdEncoded", Model.ForumTopicId.EncodeToReadable(Model.Title)}})" class="topicG-col-1 topicG-span-14 topicList-item-link @(Model.Attached ? "topicList-item-link-attached" : string.Empty)" style="display: block;">
            <div class="topicG-contentWrapper">
                @if (Model.UnreadCommentsCount > 0)
                {
                    @IconFont.Render(IconType.UnreadComment)
                    <strong>@(Model.UnreadCommentsCount > 999 ? "999+" : Model.UnreadCommentsCount.ToString())</strong> @:|
                }
                @if (Model.Attached)
                {
                    @IconFont.Render(IconType.Pinned)
                }
                @if (Model.Closed)
                {
                    @IconFont.Render(IconType.Lock)
                }
                @Model.Title
                @if (!string.IsNullOrEmpty(Model.Text))
                {
                    <div class="topicList-item-description">@Html.Raw(Model.Text.Shorten(100))</div>
                }
            </div>
        </a>
        <div class="topicG-col-15 topicG-span-4">
            <div class="topicG-contentWrapper" style="white-space: nowrap;">@await Component.InvokeAsync(nameof(DateFormat), new {date = Model.CreateDate})</div>
        </div>
        <div class="topicG-col-19 topicG-span-5">
            <div class="topicG-contentWrapper">@Html.UserLink(Model.Author)</div>
        </div>
        <div class="topicG-col-24 topicG-span-2">
            <div class="topicG-contentWrapper">@Model.CommentsCount</div>
        </div>
        @if (Model.LastCommentAuthor != null && Model.LastCommentDate.HasValue)
        {
            <a href="@Url.Action("Index", "Topic", new RouteValueDictionary {{"topicId", Model.ForumTopicId.EncodeToReadable(Model.Title)}, {"entityNumber", Model.CommentsCount}})" class="topicG-col-26 topicG-span-10" style="display: block;">
                <div class="topicG-contentWrapper">@Model.LastCommentAuthor, @await Component.InvokeAsync(nameof(HumanizedDate), new {date = Model.LastCommentDate.Value, withTooltip = false})</div>
            </a>
        }
    </div>
</div>
