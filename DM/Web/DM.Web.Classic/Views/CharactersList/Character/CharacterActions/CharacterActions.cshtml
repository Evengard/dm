@using DM.Services.Gaming.Authorization
@using Microsoft.AspNetCore.Routing
@model DM.Web.Classic.Views.CharactersList.Character.CharacterActions.CharacterActionsViewModel
<div class="charactersList-characterActions" id="CharacterActions_@(Model.CharacterId)">
    @if (Model.CanAccept)
    {
        @Html.ActionLink("Принять", "ChangeStatus", "EditCharacter", new RouteValueDictionary
        {
            {"characterId", Model.CharacterId},
            {"characterIntention", CharacterIntention.Accept}
        }, new Dictionary<string, object> {{"class", "characterAction-link"}})<br/>
    }
    @if (Model.CanDecline)
    {
        @Html.ActionLink("Отклонить", "ChangeStatus", "EditCharacter", new RouteValueDictionary
        {
            {"characterId", Model.CharacterId},
            {"characterIntention", CharacterIntention.Decline}
        }, new Dictionary<string, object> {{"class", "characterAction-link"}})<br/>
    }
    @if (Model.CanKill)
    {
        @Html.ActionLink("Убить", "ChangeStatus", "EditCharacter", new RouteValueDictionary
        {
            {"characterId", Model.CharacterId},
            {"characterIntention", CharacterIntention.Kill}
        }, new Dictionary<string, object> {{"class", "characterAction-link"}})<br/>
    }
    @if (Model.CanResurrect)
    {
        @Html.ActionLink("Воскресить", "ChangeStatus", "EditCharacter", new RouteValueDictionary
        {
            {"characterId", Model.CharacterId},
            {"characterIntention", CharacterIntention.Resurrect}
        }, new Dictionary<string, object> {{"class", "characterAction-link"}})<br/>
    }
    @if (Model.CanEdit)
    {
        @Html.ActionLink("Редактировать", "Edit", "EditCharacter", new RouteValueDictionary {{"characterId", Model.CharacterId}}, null)<br/>
    }
    @if (Model.CanRemove)
    {
        @Html.ActionLink(Model.HasMasterAccess ? "Удалить" : "Снять заявку", "Remove", "Character", new RouteValueDictionary
        {
            {"characterId", Model.CharacterId}
        }, new Dictionary<string, object> {{"class", "removeCharacter-link"}})<br/>
    }
    @if (Model.CanLeave && !Model.CanRemove)
    {
        @Html.ActionLink("Покинуть игру", "ChangeStatus", "EditCharacter", new RouteValueDictionary
        {
            {"characterId", Model.CharacterId},
            {"characterIntention", CharacterIntention.Leave}
        }, new Dictionary<string, object> {{"class", "characterAction-link"}})
    }
    @if (Model.CanReturn)
    {
        @Html.ActionLink("Вернуться в игру", "ChangeStatus", "EditCharacter", new RouteValueDictionary
        {
            {"characterId", Model.CharacterId},
            {"characterIntention", CharacterIntention.Return}
        }, new Dictionary<string, object> {{"class", "characterAction-link"}})
    }
</div>