@using DM.Web.Classic.Extensions.HtmlHelperExtensions
@using DM.Web.Classic.Extensions.HtmlHelperExtensions.Dropdown
@model DM.Web.Classic.Views.Profile.Settings.UserSettingsForm
@{
    var predefinedValues = new[] {10, 30, 50, 100};
}
@using (Html.BeginForm("UpdateSettings", "EditProfile", FormMethod.Post, new Dictionary<string, object> {{"id", "UserSettingsForm"}}))
{
    <div class="content-minorTitle profile-settings-group">Часовой пояс</div>
    <div class="form-field-wrapper">
        @Html.DropdownFor(m => m.Timezone, Model.TimezonesList, new Dictionary<string, object> {{"class", "profile-edit-data-dropdown"}})
    </div>

    <div class="content-minorTitle profile-settings-group">Количество сообщений на странице</div>
    <div class="form-field-wrapper profile-settings-perPage">
        @Html.SuggestFor(m => m.PostsPerPage, predefinedValues, new Dictionary<string, object> {{"size", 3}, {"maxlength", 3}})
        @Html.LabelFor(m => m.PostsPerPage, "– в играх")
        @Html.ValidationMessageFor(m => m.PostsPerPage)
    </div>
    <div class="form-field-wrapper profile-settings-perPage">
        @Html.SuggestFor(m => m.CommentsPerPage, predefinedValues, new Dictionary<string, object> { { "size", 3 }, { "maxlength", 3 } })
        @Html.LabelFor(m => m.CommentsPerPage, "– в обсуждениях, новостях и на форуме")
        @Html.ValidationMessageFor(m => m.CommentsPerPage)
    </div>
    <div class="form-field-wrapper profile-settings-perPage">
        @Html.SuggestFor(m => m.MessagesPerPage, predefinedValues, new Dictionary<string, object> { { "size", 3 }, { "maxlength", 3 } })
        @Html.LabelFor(m => m.MessagesPerPage, "– в личных сообщениях")
        @Html.ValidationMessageFor(m => m.MessagesPerPage)
    </div>
    <div class="content-minorTitle form-field-wrapper profile-settings-group">
        @Html.LabelFor(m => m.TopicsPerPage, "Количество тем на странице форума")
        @Html.SuggestFor(m => m.TopicsPerPage, predefinedValues, new Dictionary<string, object> { { "size", 3 }, { "maxlength", 3 } })
        @Html.ValidationMessageFor(m => m.TopicsPerPage)
    </div>
    <div class="content-minorTitle form-field-wrapper profile-settings-group">
        @Html.LabelFor(m => m.EntitiesPerPage, "Размер прочих списков на странице")
        @Html.SuggestFor(m => m.EntitiesPerPage, predefinedValues, new Dictionary<string, object> { { "size", 3 }, { "maxlength", 3 } })
        @Html.ValidationMessageFor(m => m.EntitiesPerPage)
    </div>
    <div class="content-minorTitle profile-settings-group">Цветовая схема</div>
    <div class="form-field-wrapper">
        @Html.DropdownFor(m => m.ColorSchema, wrapperHtmlAttributes: new Dictionary<string, object>{{"class", "js-colorscheme-dropdown"}})
    </div>
    if (Model.CanEditNurseGreetingsMessage)
    {
        @Html.LabelFor(m => m.NurseGreetingsMessage, "Приветственное письмо от няни")
        @await Html.SmartTextAreaFor(m => m.NurseGreetingsMessage, Model.Parser)
    }
    <div class="content-minorTitle form-field-wrapper profile-settings-group">
        <label>
            @Html.CheckBoxFor(m => m.RatingDisabled)
            Выключить рейтинг
        </label>
    </div>
    <div class="profile-settings-group">
        @Html.Submit("Сохранить")
    </div>
}