@using DM.Web.Classic.Extensions.HtmlHelperExtensions
@using DM.Web.Classic.Extensions.HtmlHelperExtensions.Dropdown
@using DM.Web.Classic.Extensions.IconFontExtensions
@model DM.Web.Classic.Views.CreateGame.CreateGameViewModel
@{
    Layout = "~/Views/Shared/Layout/_TwoColumnLayout.cshtml";
    ViewBag.Title = "Новая игра";
}

@section LeftColumn
{
    @await Html.PartialAsync("Layout/GeneralLeftColumn")
}

<h1 class="content-pageTitle">@ViewBag.Title</h1>
@using (Html.BeginForm("Create", "CreateGame", FormMethod.Post, new Dictionary<string, object> { { "id", "CreateModuleForm" } }))
{
    <div class="module-generalOptions">
        <div class="form-field-wrapper">
            @Html.LabelFor(m => m.CreateGameForm.Title, "Название", new Dictionary<string, object> { { "class", "form-field-label" } })
            @Html.TextBoxFor(m => m.CreateGameForm.Title, new Dictionary<string, object> { { "class", "module-attributes-general-input" } })
            @Html.ValidationMessageFor(m => m.CreateGameForm.Title, null, new Dictionary<string, object>{ {"class", "field-validation-error-next-line"} })
        </div>
        <div class="form-field-wrapper">
            @Html.LabelFor(m => m.CreateGameForm.SystemName, "Система", new Dictionary<string, object> { { "class", "form-field-label" } })
            @Html.TextBoxFor(m => m.CreateGameForm.SystemName, new Dictionary<string, object> { { "class", "module-attributes-general-input" } })
            @Html.ValidationMessageFor(m => m.CreateGameForm.SystemName, null, new Dictionary<string, object>{ {"class", "field-validation-error-next-line"} })
        </div>
        <div class="form-field-wrapper">
            @Html.LabelFor(m => m.CreateGameForm.SettingName, "Сеттинг", new Dictionary<string, object> { { "class", "form-field-label" } })
            @Html.TextBoxFor(m => m.CreateGameForm.SettingName, new Dictionary<string, object> { { "class", "module-attributes-general-input" } })
            @Html.ValidationMessageFor(m => m.CreateGameForm.SettingName, null, new Dictionary<string, object>{ {"class", "field-validation-error-next-line"} })
        </div>
        <div class="form-field-wrapper">
            @Html.Label("ModuleAssistant", "Ассистент", new Dictionary<string, object> { { "class", "form-field-label" } })
            @Html.TextBox("ModuleAssistant", null, new Dictionary<string, object>
            {
                {"id", "AssistantAutocomplete"},
                {"class", "module-attributes-general-input"},
                {"data-url", Url.Action("AutocompleteUser", "Search")}
            })
            @Html.HiddenFor(m => m.CreateGameForm.AssistantId)
        </div>
        <div class="form-field-wrapper">
            @Html.LabelFor(m => m.CreateGameForm.AttributeSchemaId, "Характеристики персонажей",
                new Dictionary<string, object>
                {
                    {"id", $"{Html.DisplayNameFor(m => m.CreateGameForm.AttributeSchemaId)}_Label"},
                    {"class", "form-field-label"}
                })
            @Html.DropdownFor(m => m.CreateGameForm.AttributeSchemaId, Model.AttributeSchemas, new Dictionary<string, object> { { "class", "module-attributes-schema-dropdown" } })
            <span class="field-validation-error module-attributes-schema-error" id="AttributeSchemaValidationMessage">Выберите схему характеристик персонажей</span>
        </div>
        <div class="form-field-wrapper">
            <label>@Html.CheckBoxFor(m => m.CreateGameForm.CreateAsRegistration) Оформляется</label>
        </div>
    </div>

    <div class="module-extendedOptions-wrapper">
        <a href="javascript:void(0)" class="module-extendedOptions-link" id="ExtendedOptionsLink">Перейти к расширенным настройкам</a>
        <div id="ExtendedOptions" class="module-extendedOptions">
            <div class="form-field-wrapper">
                @Html.LabelFor(m => m.CreateGameForm.CommentariesAccessMode, "Обсуждения",
                    new Dictionary<string, object>
                    {
                        {"id", $"{Html.DisplayNameFor(m => m.CreateGameForm.CommentariesAccessMode)}_Label"},
                        {"class", "form-field-label"}
                    })
                @Html.DropdownFor(m => m.CreateGameForm.CommentariesAccessMode,
                    wrapperHtmlAttributes: new Dictionary<string, object>{{"style", "max-width: 200px"}})
            </div>
            <div class="form-field-wrapper">
                <label class="">
                    @Html.CheckBoxFor(m => m.CreateGameForm.HideTemper) Скрыть характеры персонажей
                </label>
            </div>
            <div class="form-field-wrapper">
                <label class="">
                    @Html.CheckBoxFor(m => m.CreateGameForm.HideSkills) Скрыть навыки персонажей
                </label>
            </div>
            <div class="form-field-wrapper">
                <label class="">
                    @Html.CheckBoxFor(m => m.CreateGameForm.HideInventory) Скрыть инвентарь персонажей
                </label>
            </div>
            <div class="form-field-wrapper">
                <label class="">
                    @Html.CheckBoxFor(m => m.CreateGameForm.HideStory) Скрыть истории персонажей
                </label>
            </div>
            <div class="form-field-wrapper">
                <label class="">
                    @Html.CheckBoxFor(m => m.CreateGameForm.HideDiceResults) Скрыть броски кубиков
                </label>
            </div>
            <div class="form-field-wrapper">
                <label class="">
                    @Html.CheckBoxFor(m => m.CreateGameForm.ShowPrivateMessages) Показывать всем приватные сообщения
                </label>
            </div>
            <div class="form-field-wrapper">
                <label class="">
                    @Html.CheckBoxFor(m => m.CreateGameForm.DisableAlignment) Отключить графу "мировоззрение"
                </label>
            </div>
        </div>
    </div>

    <div class="form-field-wrapper">
        @Html.LabelFor(m => m.CreateGameForm.Info, "Описание", new Dictionary<string, object> {{"class", "form-field-sta-label"}})
        @await Html.SmartTextAreaFor(m => m.CreateGameForm.Info, Model.Parser, inputHtmlAttributes: new Dictionary<string, object> {{"class", "bigSmartTextArea"}})
    </div>

    <div class="form-field-wrapper">
        <label class="form-field-label">Теги</label>
        <div class="form-field-value-text create-module-tags">
            <div id="CreateModuleTags" data-name-format="@Html.NameFor(m => m.CreateGameForm.TagIds[0])"
                 data-preselected="[]">
                @Html.DropdownGroup("CreateModuleTags_dropdown", Model.Tags, null, false, new Dictionary<string, object> { { "class", "dropdownmultiselect-dropdown" } }, new Dictionary<string, object> { {"class", "tags-dropdown-options"} })
                <div class="dropdownmultiselect-selectedList create-module-tags-list"></div>
                <div class="dropdownmultiselect-deselectFormat">@IconFont.Render(IconType.Close)</div>
            </div>
        </div>
    </div>

    @Html.Submit("Создать игру", new Dictionary<string, object>{{"class", "form-submit-button"}})
}
@section FooterScript
{

    <script>
        var createModuleControl = new DM.CreateModuleControl({
            getCreateSchemaFormUrl: "@Url.Action("GetCreateForm", "CreateAttributeSchema")"
        });
        DM.Ready();
    </script>
}
