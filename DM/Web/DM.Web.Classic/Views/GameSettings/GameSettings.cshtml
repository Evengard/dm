@using DM.Web.Classic.ViewComponents
@using DM.Web.Classic.Views.GameActions
@using DM.Web.Classic.Views.GameSettings
@using DM.Web.Core.Extensions.EnumExtensions
@using DM.Web.Core.Helpers
@using Microsoft.AspNetCore.Routing
@model DM.Web.Classic.Views.GameSettings.GameSettingsViewModel
@{
    ViewBag.Title = $"Настройки игры | {Model.GameTitle}";
    Layout = "~/Views/Shared/Layout/_TwoColumnLayout.cshtml";
}

@section LeftColumn
{
    @await Html.PartialAsync("Layout/GameLeftColumn", PageType.Settings, new ViewDataDictionary(ViewData) {{"ModuleId", Model.GameId}})
}

<h1 class="content-pageTitle">Настройки игры</h1>

<div class="tabLinks-wrapper">
    @foreach(GameSettingsType settingType in Enum.GetValues(typeof(GameSettingsType)))
    {
        <a href="@Url.Action("Index", "GameSettings", new RouteValueDictionary {{"moduleId", Model.GameId.EncodeToReadable(Model.GameTitle)}, {"settingsType", settingType}})"
           class="tabLink@(settingType == Model.DefaultSettings ? " active" : string.Empty)"
           data-tab-id="@(settingType)SettingsTab"
           data-visual-url="@Url.Action("Index", "GameSettings", new RouteValueDictionary {{"moduleId", Model.GameId.EncodeToReadable(Model.GameTitle)}, {"settingsType", settingType}})">
            @settingType.GetDescription()
        </a>
    }
</div>

<div class="tabBlocks-wrapper">
    @foreach(GameSettingsType settingsType in Enum.GetValues(typeof(GameSettingsType)))
    {
        <div class="tabBlock" id="@(settingsType)SettingsTab" data-tab-uploaded="@((Model.DefaultSettings == settingsType).ToString().ToLower())">
            @if (Model.DefaultSettings == settingsType)
            {
                @await Component.InvokeAsync(nameof(GameSettings), new{ moduleId = Model.GameId, settingsType })
            }
        </div>
    }
</div>

@section FooterScript
{
    <script>
        var moduleSettingsControl = new DM.ModuleSettingsControl({
            defaultControl: "@Model.DefaultSettings",
            insertRoomAfterUrl: "@Url.Action("InsertAfter", "Room")",
            insertFirstRoomUrl: "@Url.Action("InsertFirst", "Room")",
            attachCharacterToRoomUrl: "@Url.Action("AttachToRoom", "Character")",
            animationTime: 0,
            defaultTabId: "@(Model.DefaultSettings)SettingsTab"
        });
        DM.Ready();
    </script>
}
