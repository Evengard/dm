@using DM.Services.Core.Extensions
@using DM.Web.Classic.Extensions.IconFontExtensions
@using Microsoft.AspNetCore.Routing
@model DM.Web.Classic.Views.Shared.GamesList.GameLink.GameLinkViewModel
<li class="modulesList-item leftMenu-list-item@(Model.IsCurrentGame ? " current-module" : string.Empty)">
    <span>
        @if (Model.HasPostNotification)
        {
            @await Html.PartialAsync("GamesList/GameLink/GameNotification/GameNotification", Model.Notification)
        }
        @{
            var linkClasses = new List<string>();
            if (Model.IsNew)
            {
                linkClasses.Add("module-new");
            }
            if (Model.IsCurrentGame)
            {
                linkClasses.Add("current-module");
            }
            var linkClass = string.Join(" ", linkClasses);
        }

        @Html.ActionLink(Model.Title, "Index", "Game", new RouteValueDictionary {{"gameId", Model.GameId.EncodeToReadable(Model.Title)}},
            new Dictionary<string, object>
            {
                {"title", $"Мастер: {Model.Master.Login}\nСистема: {Model.SystemName}\nСеттинг: {Model.SettingName}"},
                {"class", linkClass}
            })
    </span>
    @if (Model.HasUnreadCounters)
    {
        <span class="notification-unread">
            <a href="@Url.Action("FirstUnreadPostInGame", "Post", new RouteValueDictionary {{"gameId", Model.GameId.EncodeToReadable(Model.Title)}})" class="@linkClass">@Html.UnreadPostsIcon(Model.UnreadPostsCount, false)</a>@*
            *@&nbsp;<span class="notificaion-unread-separator">|</span>&nbsp;@*
            *@<a href="@Url.Action("LastUnread", "GameCommentaries", new RouteValueDictionary {{"gameIdEncoded", Model.GameId.EncodeToReadable(Model.Title)}})" class="@linkClass">@Html.UnreadCommentsIcon(Model.UnreadCommentsCount, false)</a>
            @if (Model.UnreadCharactersCount > 0)
            {
                <span class="notificaion-unread-separator">|</span>
                <a href="@Url.Action("Index", "CharactersList", new RouteValueDictionary {{"gameId", Model.GameId.EncodeToReadable(Model.Title)}})" class="@linkClass">
                    @IconFont.Render(IconType.User)
                    @Model.UnreadCharactersCount
                </a>
            }
        </span>
    }
</li>