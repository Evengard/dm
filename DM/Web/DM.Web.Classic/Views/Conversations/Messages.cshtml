@using DM.Web.Classic.Extensions.IconFontExtensions
@using Microsoft.AspNetCore.Routing
@model DM.Web.Classic.Views.Conversations.MessagesListViewModel

@{
    ViewBag.Title = $"{Model.Collocutor.Login} | Переписка";
    Layout = "~/Views/Shared/Layout/_TwoColumnLayout.cshtml";
}

@section LeftColumn
{
    @await Html.PartialAsync("Layout/GeneralLeftColumn")
}

<h1 class="content-pageTitle">@ViewBag.Title</h1>
<div class="messages-actions">
    <a href="@Url.Action("List", "Conversations", new RouteValueDictionary{{"entityNumber", 1}})" class="messages-backLink">@IconFont.Render(IconType.LeftArrow) Назад к диалогам</a>
    <a href="@Url.Action("Index", "Profile", new RouteValueDictionary{{"login", Model.Collocutor.Login}})">@IconFont.Render(IconType.User) К профилю собеседника</a>
    <a href="javascript:void(0)" id="ShowConversationActionsLink" class="conversation-actions-link">@IconFont.Render(IconType.Actions)</a>
    <div class="conversation-actions" id="ConversationActions">
        <div class="conversation-action conversation-actions-disabled" id="RemoveSelectedMessages" data-url="@Url.Action("Remove", "Conversations")">
            Удалить выбранные
        </div>
        @if (Model.CanReport)
        {
            <div class="conversation-action conversation-actions-disabled" id="ReportSelectedMessages" data-url="@Url.Action("Report", "ConversationReport")">
                Пожаловаться на сообщения
            </div>
        }
        <div class="conversation-action" id="IgnoreConversation" data-url="@Url.Action("ToggleIgnore", "Conversations", new RouteValueDictionary { {"conversationId", Model.ConversationId} })" data-swaptext="@(Model.Ignored ? "Игнорировать собеседника" : "Не игнорировать собеседника")">
            @(Model.Ignored ? "Не игнорировать собеседника" : "Игнорировать собеседника")
        </div>
    </div>
</div>
<div id="ReportSuccessMessage" class="messages-success">
    @IconFont.Render(IconType.Tick) Уведомление о нарушении правил отправлено администрации
</div>
<div id="Paginator" class="paginator"></div>
<div id="Container">
    @await Html.PartialAsync("~/Views/Conversations/MessagesList.cshtml", Model.Messages)
</div>
<div class="paginator-fixed-wrapper">
    <div id="PaginatorHover" class="paginator-fixed"></div>
</div>
<hr/>
@await Html.PartialAsync("~/Views/Conversations/CreateMessage/CreateMessage.cshtml", Model.CreateMessageForm)

@section FooterScript
{
    <script>
        var messagesList = new DM.MessagesListControl({
            totalPages: @Model.TotalPagesCount,
            currentPage: @Model.CurrentPage,
            pageSize: @Model.PageSize,
            entityNumber: @Model.EntityNumber,
            pageUrlTemplate: "@Url.Action("Index", "Conversations", new RouteValueDictionary {{"login", Model.Collocutor.Login}, {"entityNumber", "__pn__"}})"
        });
        DM.Ready();
    </script>
}